import Foundation

//1
//let optional: Int? = 7 
let optional: Int = 7

//let nonOptional: Int = optional 
let nonOptional: Int = 6 
//let nonOptional: String = "optional"

//2

//var name: String? = "Test" 
//var age: Int = nil 
//let distance: Float = 26.7 
//var middleName: String? = nil

var name: String = "Test" 
var age: Int = 77 
let distance: Float = 26.7 
var middleName: String? = nil 


//3

let number: Int? = 10

let num1: Int = number!

let num2 = number!

if let num3 = number {
    print("successful \(num3)")
}   else{
    print("nil")
}

var num4 = number ?? 15
print(num4)

func guardTest(){
    guard let num5 = number else{
        return
    }
    print(num5)
}
guardTest()

if case let num6? = number{
    print(num6)
}

//4
var numbers = [4, 8, 15, 16, 23, 42] 
numbers = numbers.map{$0 == 15 ? 17 : $0 }


//5
let array1 = [Int]() 
let array2:[Int] = [] 
let array3: [String] = [] 

var array4 = [1, 2, 3] 
print(array4[0]) 
print(array4[2]) 
array4[1...2] = [1, 2]
array4[0] = 4 
array4.append(4) 

var array5 = [1, 2, 3] 
array5[0] = array5[1] 
array5[0...1] = [4, 5] 
array5[0] = 6 
var i=0
while i<array5.count {
    array5[i] += 6
    i += 1
}
for item in array5 { print(item) } 

let dict1 = Dictionary<Int, Int>() 
let dict2 = [Int: Int]()
let dict3: [Int: Int] = [:]

var dict4 = ["One": 1, "Two": 2, "Three": 3] 
print(dict4["One"]) 
dict4["One"] = 1
dict4["Zero"] = 0 
dict4["Four"] = 4 

var dict5 = ["NY": "New York", "CA": "California"] 
dict5["NY"] = "New York"
dict5["WA"] = "Washington" 
dict5["CA"] = nil 

//6
 let houseAnimals: Set = ["4", "5"] 
 let farmAnimals: Set = ["1", "2", "3", "4", "5"] 
 let farmButNoHouseAnimals = farmAnimals.subtracting(houseAnimals)

//7

let appRatings = [    "Calendar Pro": [1, 5, 5, 4, 2, 1, 5, 4],    
                      "The Messenger": [5, 4, 2, 5, 4, 1, 1, 2],    
                      "Socialise": [2, 1, 2, 2, 1, 2, 4, 2] 
]

var averageRating = [ String : Double]()
 
for (nameApp, rating) in appRatings{
    var value : Double = 0       
    var sum : Double = 0
    var j : Double = 0
    for number in rating {
    sum += Double(number)
    j += 1
    } 
    value = sum / j    
    
    averageRating[nameApp] = value    
}
print(averageRating)

//8

var nameApp3 : String = ""
for (nameApp, rating) in averageRating{
    if rating > 3 {
        nameApp3 += "\(nameApp) "
    }
}
print(nameApp3)

//9

func hello (str : String) -> (){
    print("Привет, \(str)")
}

hello(str : "Саня")

//10

func helloNameS (str1 : String, str2 : String) -> (){
    print("Привет, \(str1) \(str2)")
}

helloNameS (str1 : "Василий" , str2 : "Пупкин" )

//11

func sumArguments(arguments: Int...) -> Int {
    var sum : Int = 0
    for i in arguments {
        sum += i
    }
    print(sum)
    return sum
}

sumArguments (arguments: 1,  3, 5)

//12

let closureString1 = {
    print("Привет")
}

var closureString2 = closureString1

closureString1()

//13




//14

let unsortedArray =  [16, 8, 15, 42, 4, 23] 
let sortedArray = unsortedArray.sorted{
    (arg1: Int, arg2: Int) -> Bool in
    return arg1 > arg2
}
print(sortedArray)

//15

var unsortedArray1 =  [16, 8, 15, 42, 4, 23] 
var sortedArray1 = unsortedArray1.filter{ $0 > 10 }

//16

func callClosure( closure: () -> ()){
    closure()
}

callClosure(closure: closureString1)

//17

func helloSomeName(name: String) -> () {
    let helloName = {
        return print("Привет \(name)")
    }
    return helloName()
}

helloSomeName(name: "Паша")

//18



//19

class Employee { weak var computer: Computer? } 
class Computer { var employee: Employee? } 
var employee: Employee? = Employee() 
var computer: Computer? = Computer() 
employee?.computer = computer 
computer?.employee = employee 

//20



//21

let animals1 = ["dog", "cat", "bird", "pig"] 
let animals2 = ["turtle", "snake", "lizard", "shark"] 


func animalCheck(animal: String="dog") -> Bool {
    for i in animals1 {
        if i == animal{
            return true
            break
        }     
    }

    for i in animals2 {
        if i == animal{
            return true
            break
        }    
    }
    
    return false
}

//22

func factorial(_ n: Int) -> Int{
     
    if n == 0{
        return 1
    } else if n < 0{
        print("Number less than 0")
        break
    }
    return n * factorial(n - 1)
}

//23

func cheakArray(numbers: Int...) -> Int{
    var i : Int = 0
    for number in numbers {
        if number == 2{
        i += 1
        }
    }
    return i
}

//24

func cheakArray1(numbers1: Int...) -> Bool{
    for number in numbers1[1...3] {
        if number == 2{
        return true
        break
        }
    }
    return false
}

//25

var i25 : Int = 0
var sum25 : Int = 0 

func cheakArray2(numbers2: Int...) -> Int{
    while i25 < numbers2.count{
        if numbers2[i25] == 5{
            if numbers2[i25 + 1] == 5{
                sum25 += 1
            }
        }
        i25 += 1
    }
    return sum25
}
